@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    @Styles.Render("~/Content/css")
</head>
<body>

    <div class="container" id="wrapper">
        <input type="text" placeholder="Email" name="email" id="email">
        <input type="password" placeholder="Password" name="password" id="password">
        <button class="btn btn-primary" id="loginBtn">Login</button>
    </div>

    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/underscore.js"></script>
    <script src="~/Scripts/backbone.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>

    <script>
        var LoginModel = Backbone.Model.extend({
            url: 'login',

            defaults: {
                email: '',
                password: ''
            }
        });

        var LoginView = Backbone.View.extend({
            el: $('#wrapper'),

            events: {
                "click #loginBtn": "login"
            },

            initialize: function () {
                this.listenTo(this.model, 'change', this.render);
            },

            render: function () {
                //var attributes = this.model.toJSON();
            },

            login: function () {
                console.log('View: login');
                this.model.set({
                    "email": $('#email').val(),
                    "password": $('#password').val()
                });

                console.log('Model: Login function:' + JSON.stringify(this.model));

                this.model.save(
                    { Email: this.model.email, Password: this.model.password },
                    {
                        success: function (model, response, options) {
                            if (response.success) {
                                location.href = "/Home/Index"
                            } else {
                                alert("Status code: " + response.statusCode + ". " + response.statusCodeText + ". " + response.responseText);
                            }
                            console.log("success\n" + JSON.stringify(model) +"\n\n" + JSON.stringify(response) + "\n\n" + JSON.stringify(options));
                        },

                        error: function (model, response, options) {
                            console.log("error\n" + JSON.stringify(model) + "\n\n" + JSON.stringify(response) + "\n\n" + JSON.stringify(options));
                        }
                    }
                );

                console.log('Model: response');
            }
        });

        //var Router = Backbone.Router.extend({
        //    routes: {
        //        "": "home",
        //        "login": "login"
        //    },

        //    home: function () {
        //    },

        //    login: function () {
        //        var loginModel = new LoginModel();
        //        var loginView = new LoginView({ model: loginModel });
        //        loginModel.fetch();
        //    }
        //});

        var m = new LoginModel();
        var v = new LoginView({ model: m });
        Backbone.history.start();

    </script>

</body>
</html>
